<?xml version="1.0" encoding="UTF-8"?>
<!--
Examiner Navigation Mode
Camera navigation SCXML state machine for Coin 3.0.
-->
<scxml xmlns="http://www.coin3d.org/scxml/coin/1.0" initialstate="idle">
  <state id="base">
    <!-- A few "global" event transitions that work regardless of active substate. -->
    <!--
    <transition event="sim.coin3d.coin.navigation.*"><invoke targettype="sim.coin3d.coin" src="DebugInfo"/></transition>
    -->
    <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.LEFT_ALT" target="interact"/>
    <transition event="sim.coin3d.coin.SoKeyboardEvent.UP.LEFT_ALT" target="idle"/>
    <transition event="sim.coin3d.coin.navigation.ViewAll">
      <invoke targettype="sim.coin3d.coin" src="ViewAll"/>
    </transition>
    <transition event="sim.coin3d.coin.SoTapGestureEvent.FINISHED">
      <invoke targettype="sim.coin3d.coin" src="Tap"/>
    </transition>
    <!--<transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.SPACE">
      <invoke targettype="lbi" src="ToggleManipulator"/>
    </transition>-->
    <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.T">
      <invoke targettype="lbi" src="ToggleRelative"/>
    </transition>
    <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.SPACE">
      <invoke targettype="lbi" src="CuttingPlaneToggleRequest"/>
    </transition>
    <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.UP_ARROW">
      <invoke targettype="lbi" src="CuttingPlaneMoveUpRequest"/>
    </transition>
    <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.DOWN_ARROW">
      <invoke targettype="lbi" src="CuttingPlaneMoveDownRequest"/>
    </transition>
    <transition event="sim.coin3d.coin.PopupMenuOpen" target="idle"/>
    <transition event="sim.coin3d.coin.navigation.Seek" target="seek_wait"/>
    <transition event="lbi.navigation.ViewInterpolation" target="viewinterpolation_active"/>
    <transition event="lbi.navigation.PolydrawStart" target="polydraw_wait"/>
    <transition event="lbi.navigation.PolydrawEnd" target="idle">
      <invoke targettype="lbi" src="EndPolyDraw"/>
    </transition>
    <transition event="lbi.navigation.DatadrawStart" target="datadraw_wait">
      <invoke targettype="lbi" src="BeginDataDraw"/>
    </transition>
    <transition event="lbi.navigation.DatadrawEnd" target="idle">
      <invoke targettype="lbi" src="EndDataDraw"/>
    </transition>
    <transition event="lbi.navigation.RayProfile" target="rayprofile_wait"/>
    <transition event="lbi.navigation.Idle" target="idle"/>
    <transition event="lbi.navigation.SeedPoint" target="seed_point_selection"/>
    <transition event="lbi.navigation.ROICenter" target="roi_center_selection"/>
    <transition event="lbi.navigation.PlaceLabel" target="label_placement"/>
    <transition event="lbi.navigation.PlaceMeasurement" target="measurement_placement"/>
    <state id="interact" task="true">
      <!-- ** INTERACT MODE **************** -->
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <!-- A "dead state".
           Only interactive scene graph parts will react in this mode. -->
    </state>
    <state id="idle" task="true">
      <!-- ** IDLE MODE ************************ -->
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.S" target="seek"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.D" target="polydraw"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.P" target="rayprofile"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.C" target="datadraw"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.Q" target="seed_point_selection"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.L" target="label_placement"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.M" target="measurement_placement"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.R" target="roi_center_selection"/>
      <transition event="sim.coin3d.coin.SoZoomPanOrientGestureEvent.STARTED" target="zoompanorient">
        <invoke targettype="sim.coin3d.coin" src="SetZoomPanOrient"/>
      </transition>
      <transition event="sim.coin3d.coin.SoObjectMoveGestureEvent.STARTED" target="objectmove">
        <invoke targettype="sim.coin3d.coin" src="SetObjectMove"/>
      </transition>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="rotate">
        <invoke targettype="sim.coin3d.coin" src="SetRotate"/>
      </transition>
      <transition event="sim.coin3d.coin.SoSlideGestureEvent.STARTED" target="rotate">
        <invoke targettype="sim.coin3d.coin" src="SetRotate"/>
      </transition>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON3" target="pan_button_move">
        <invoke targettype="sim.coin3d.coin" src="SetPan"/>
      </transition>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON4" target="zoom_step_out"/>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON5" target="zoom_step_in"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.LEFT_SHIFT" target="pan_shift_wait"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.LEFT_CONTROL" target="zoom_ctrl_wait"/>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.W" target="wlevel_w_wait"/>
      <transition event="sim.coin3d.coin.navigation.SetSpin" target="spin">
        <invoke targettype="sim.coin3d.coin" src="SetSpin"/>
      </transition>
    </state>
    <state id="zoompanorient" task="true">
      <!-- ** ZOOM PAN ORIENT gesture ******************** -->
      <initial id="zoompanorient_initial">
        <transition target="zoompanorient_active"/>
      </initial>
      <state id="zoompanorient_active">
        <transition event="sim.coin3d.coin.SoZoomPanOrientGestureEvent.UPDATED">
          <invoke targettype="sim.coin3d.coin" src="UpdateZoomPanOrient"/>
        </transition>
      </state>
      <transition event="sim.coin3d.coin.SoZoomPanOrientGestureEvent.FINISHED" target="idle"/>
      <onexit>
        <invoke targettype="sim.coin3d.coin" src="EndZoomPanOrient"/>
      </onexit>
    </state>
    <state id="objectmove" task="true">
      <!-- ** OBJECT MOVE gesture ******************** -->
      <initial id="objectmove_initial">
        <transition target="objectmove_active"/>
      </initial>
      <state id="objectmove_active">
        <transition event="sim.coin3d.coin.SoObjectMoveGestureEvent.UPDATED">
          <invoke targettype="sim.coin3d.coin" src="UpdateObjectMove"/>
        </transition>
      </state>
      <transition event="sim.coin3d.coin.SoObjectMoveGestureEvent.FINISHED" target="idle"/>
      <onexit>
        <invoke targettype="sim.coin3d.coin" src="EndObjectMove"/>
      </onexit>
    </state>
    <state id="rotate" task="true">
      <!-- ** ROTATE MODE ******************** -->
      <initial id="seek_initial">
        <transition target="rotate_wait"/>
      </initial>
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <state id="rotate_wait">
        <transition event="sim.coin3d.coin.SoLocation2Event" target="rotate_move">
          <invoke targettype="sim.coin3d.coin" src="UpdateRotate"/>
        </transition>
        <transition event="sim.coin3d.coin.SoSlideGestureEvent.UPDATED" target="rotate_move">
          <invoke targettype="sim.coin3d.coin" src="UpdateRotate"/>
        </transition>
      </state>
      <state id="rotate_move">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="sim.coin3d.coin" src="UpdateRotate"/>
        </transition>
        <transition event="sim.coin3d.coin.SoSlideGestureEvent.UPDATED">
          <invoke targettype="sim.coin3d.coin" src="UpdateRotate"/>
        </transition>
      </state>
      <onexit>
        <invoke targettype="sim.coin3d.coin" src="EndRotate"/>
      </onexit>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="idle"/>
      <transition event="sim.coin3d.coin.SoSlideGestureEvent.FINISHED" target="idle"/>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON3" target="zoom_buttons_move">
        <invoke targettype="sim.coin3d.coin" src="SetZoom"/>
      </transition>
    </state>
    <state id="spin" task="true">
      <!-- ** SPIN MODE ************************ -->
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <onentry>
        <invoke targettype="sim.coin3d.coin" src="ScheduleRedraw"/>
      </onentry>
      <onexit>
        <invoke targettype="sim.coin3d.coin" src="EndSpin"/>
      </onexit>
      <transition event="sim.coin3d.coin.GLRender.PRE_RENDER">

      </transition>
      <transition event="sim.coin3d.coin.GLRender.POST_RENDER">
        <invoke targettype="sim.coin3d.coin" src="UpdateSpin"/>
        <invoke targettype="sim.coin3d.coin" src="ScheduleRedraw" srcexpr="0.0"/>
      </transition>
      <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.ESCAPE" target="idle"/>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="rotate">
        <invoke targettype="sim.coin3d.coin" src="SetRotate"/>
      </transition>
      <transition event="sim.coin3d.coin.SoSlideGestureEvent.STARTED" target="rotate">
        <invoke targettype="sim.coin3d.coin" src="SetRotate"/>
      </transition>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON3" target="pan_button_move">
        <invoke targettype="sim.coin3d.coin" src="SetPan"/>
      </transition>
    </state>
    <state id="pan" task="true">
      <!-- ** PAN MODE ************************** -->
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <state id="pan_shift_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.UP.LEFT_SHIFT" target="idle"/>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="pan_shift_move">
          <invoke targettype="sim.coin3d.coin" src="SetPan"/>
        </transition>
      </state>
      <state id="pan_shift_move">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="sim.coin3d.coin" src="UpdatePan"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="pan_shift_wait">
          <invoke targettype="sim.coin3d.coin" src="EndPan"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.UP.LEFT_SHIFT" target="rotate">
          <invoke targettype="sim.coin3d.coin" src="EndPan"/>
          <invoke targettype="sim.coin3d.coin" src="SetRotate"/>
        </transition>
      </state>
      <state id="pan_button_move">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="sim.coin3d.coin" src="UpdatePan"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON3" target="idle">
          <invoke targettype="sim.coin3d.coin" src="EndPan"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="zoom_buttons_move">
          <invoke targettype="sim.coin3d.coin" src="EndPan"/>
          <invoke targettype="sim.coin3d.coin" src="SetZoom"/>
        </transition>
      </state>
    </state>
    <state id="zoom" task="true">
      <!-- ** ZOOM MODE ************************ -->
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <state id="zoom_ctrl_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.UP.LEFT_CONTROL" target="idle"/>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="zoom_ctrl_move">
          <invoke targettype="sim.coin3d.coin" src="SetZoom"/>
        </transition>
      </state>
      <state id="zoom_ctrl_move">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="sim.coin3d.coin" src="UpdateZoom"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="zoom_ctrl_wait">
          <invoke targettype="sim.coin3d.coin" src="EndZoom"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.UP.LEFT_CONTROL" target="rotate">
          <invoke targettype="sim.coin3d.coin" src="EndZoom"/>
          <invoke targettype="sim.coin3d.coin" src="SetRotate"/>
        </transition>
      </state>
      <state id="zoom_buttons_move">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="sim.coin3d.coin" src="UpdateZoom"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON3" target="rotate">
          <invoke targettype="sim.coin3d.coin" src="EndZoom"/>
          <invoke targettype="sim.coin3d.coin" src="SetRotate"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="pan_button_move">
          <invoke targettype="sim.coin3d.coin" src="EndZoom"/>
          <invoke targettype="sim.coin3d.coin" src="SetPan"/>
        </transition>
      </state>
      <state id="zoom_step">
        <transition event="zoom_step_in_container.done" target="idle"/>
        <transition event="zoom_step_out_container.done" target="idle"/>
        <state id="zoom_step_in_container">
          <onentry>
            <invoke targettype="sim.coin3d.coin" src="UpdateZoom" srcexpr="zoomvalue=-0.1"/>
          </onentry>
          <final id="zoom_step_in"/>
        </state>
        <state id="zoom_step_out_container">
          <onentry>
            <invoke targettype="sim.coin3d.coin" src="UpdateZoom" srcexpr="zoomvalue=0.1"/>
          </onentry>
          <final id="zoom_step_out"/>
        </state>
      </state>
    </state>
    <state id="wlevel" task="true">
      <!-- ** WINDOW LEVEL ADJUST MODE ******** -->
      <!--<transition event="*"><invoke targettype="sim.coin3d.coin" src="DebugInfo"/></transition>-->
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <state id="wlevel_w_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.W" target="idle"/>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="wlevel_w_move">
          <invoke targettype="lbi" src="SetWindowLevel" srcexpr="START"/>
        </transition>
      </state>
      <state id="wlevel_w_move">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="SetWindowLevel" srcexpr="UPDATE"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="wlevel_w_wait">
          <invoke targettype="lbi" src="EndWindowLevel"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.W" target="idle">
          <invoke targettype="lbi" src="EndWindowLevel"/>
          <!--<invoke targettype="sim.coin3d.coin" src="SetRotate"/>-->
        </transition>
      </state>
    </state>
    <state id="seek" task="true">
      <!-- ** SEEK MODE ************************ -->
      <initial id="seek_initial">
        <transition target="seek_wait"/>
      </initial>
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <transition event="seek.done" target="idle"/>
      <state id="seek_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.S" target="idle"/>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.D" target="polydraw"/>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.P" target="rayprofile"/>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.C" target="datadraw"/>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="seek_move">
          <invoke targettype="sim.coin3d.coin" src="SetSeek"/>
        </transition>
      </state>
      <state id="seek_move">
        <onentry>
          <invoke targettype="sim.coin3d.coin" src="ScheduleRedraw"/>
        </onentry>
        <transition event="sim.coin3d.coin.GLRender.PRE_RENDER">

        </transition>
        <transition event="sim.coin3d.coin.GLRender.POST_RENDER">
          <invoke targettype="sim.coin3d.coin" src="UpdateSeek"/>
          <invoke targettype="sim.coin3d.coin" src="ScheduleRedraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="seek_move">
          <invoke targettype="sim.coin3d.coin" src="EndSeek"/>
          <invoke targettype="sim.coin3d.coin" src="SetSeek"/>
        </transition>
        <transition event="sim.coin3d.coin.navigation.seekend" target="seek_done">
          <invoke targettype="sim.coin3d.coin" src="EndSeek"/>
        </transition>
        <transition event="sim.coin3d.coin.navigation.seekmiss" target="seek_done">
          <invoke targettype="sim.coin3d.coin" src="EndSeek"/>
        </transition>
      </state>
      <final id="seek_done"/>
    </state>
    <state id="viewinterpolation" task="true">
      <!-- ** VIEW INTERPOLATION MODE ************************ -->
      <initial id="viewinterpolation_initial">
        <transition target="viewinterpolation_active"/>
      </initial>
      <transition event="viewinterpolation.done" target="idle"/>
      <state id="viewinterpolation_active">
        <onentry>
          <invoke targettype="lbi" src="SetViewInterpolation"/>
          <invoke targettype="sim.coin3d.coin" src="ScheduleRedraw"/>
        </onentry>
        <transition event="sim.coin3d.coin.GLRender.PRE_RENDER">

        </transition>
        <transition event="sim.coin3d.coin.GLRender.POST_RENDER">
          <invoke targettype="lbi" src="UpdateViewInterpolation"/>
          <invoke targettype="sim.coin3d.coin" src="ScheduleRedraw"/>
        </transition>
        <transition event="lbi.navigation.viewinterpolationend" target="viewinterpolation_done">
          <invoke targettype="lbi" src="EndViewInterpolation"/>
        </transition>
      </state>
      <final id="viewinterpolation_done"/>
    </state>
    <!-- ** REGION GROW SEED SELECTION MODE ************************ -->
    <state id="seed_point_selection" task="true">
      <initial id="seed_point_selection_initial">
        <transition target="seed_point_selection_wait">
          <invoke targettype="lbi" src="InitRGSegmentation"/>
        </transition>
      </initial>
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <transition event="seed_point_selection.done" target="idle"/>
      <state id="seed_point_selection_wait">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="SetSeedPoint" srcexpr="UPDATE"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="seed_point_selection_end">
          <invoke targettype="lbi" src="SetSeedPoint" srcexpr="SET"/>
        </transition>
      </state>
      <state id="seed_point_selection_end">
        <transition event="sim.coin3d.coin.navigation.seekend" target="seed_point_selection_done">
          <invoke targettype="lbi" src="EndSeed"/>
        </transition>
        <transition event="sim.coin3d.coin.navigation.seekmiss" target="seed_point_selection_done">
          <invoke targettype="lbi" src="EndSeed"/>
        </transition>
      </state>
      <state id="seed_point_selection_done">
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="idle"/>
      </state>
      <final id="seed_point_selection_done"/>
    </state>
    <!-- ** Label placement MODE ************************ -->
    <state id="label_placement" task="true">
      <initial id="label_placement_initial">
        <transition target="label_placement_wait"/>
        <!--  <invoke targettype="lbi" src="InitRGSegmentation"/>
        </transition>-->
      </initial>
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <transition event="label_placement.done" target="idle"/>
      <state id="label_placement_wait">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="SetLabelPoint" srcexpr="UPDATE"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="label_placement_end">
          <invoke targettype="lbi" src="SetLabelPoint" srcexpr="SET"/>
        </transition>
      </state>
      <state id="label_placement_end">
        <transition event="lbi.seekend" target="label_placement_done">
          <invoke targettype="lbi" src="EndLabelPlacement"/>
        </transition>
        <transition event="lbi.seekmiss" target="label_placement_done">
          <invoke targettype="lbi" src="EndLabelPlacement"/>
        </transition>
      </state>
      <state id="label_placement_done">
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="idle"/>
      </state>
      <final id="label_placement_done"/>
    </state>
    <!-- ** Measurement placement MODE ************************ -->
    <state id="measurement_placement" task="true">
      <initial id="measurement_placement_initial">
        <transition target="measurement_placement_wait"/>
        <!--  <invoke targettype="lbi" src="InitRGSegmentation"/>
        </transition>-->
      </initial>
      <!--<transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="contextmenurequest"/>-->
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <transition event="measurement_placement.done" target="idle"/>
      <state id="measurement_placement_wait">
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="SetMeasurementPoint" srcexpr="UPDATE"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="measurement_placement_end">
          <invoke targettype="lbi" src="SetMeasurementPoint" srcexpr="SET"/>
        </transition>
      </state>
      <state id="measurement_placement_end">
        <transition event="lbi.seekend" target="measurement_placement_done">
          <invoke targettype="lbi" src="EndMeasurementPlacement"/>
        </transition>
        <transition event="lbi.seekmiss" target="measurement_placement_done">
          <invoke targettype="lbi" src="EndMeasurementPlacement"/>
        </transition>
      </state>
      <state id="measurement_placement_done">
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="idle"/>
      </state>
      <final id="measurement_placement_done"/>
    </state>
    <!-- ** ROI CENTER SELECTION MODE ************************ -->
    <state id="roi_center_selection" task="true">
      <initial id="roi_center_selection_initial">
        <transition target="roi_center_selection_wait"/>
        <!--  <invoke targettype="lbi" src="InitRGSegmentation"/>
        </transition>-->
      </initial>
      <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
        <invoke targettype="lbi" src="ContextMenuRequest"/>
      </transition>
      <transition event="roi_center_selection.done" target="idle"/>
      <state id="roi_center_selection_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.ESC" target="roi_center_selection_done">
          <invoke targettype="lbi" src="EndROI"/>
        </transition>
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="SetROICenter" srcexpr="UPDATE"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="roi_center_selection_end">
          <invoke targettype="lbi" src="SetROICenter" srcexpr="SET"/>
        </transition>
      </state>
      <state id="roi_center_selection_end">
        <transition event="sim.coin3d.coin.navigation.seekend" target="roi_center_selection_done">
          <invoke targettype="lbi" src="EndROI"/>
        </transition>
        <transition event="sim.coin3d.coin.navigation.seekmiss" target="roi_center_selection_done">
          <invoke targettype="lbi" src="EndROI"/>
        </transition>
      </state>
      <state id="roi_center_selection_done">
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="idle"/>
      </state>
      <final id="roi_center_selection_done"/>
    </state>
    <state id="polydraw" task="true">
      <!-- ** POLYGON DRAW MODE ************************ -->
      <initial id="polydraw_initial">
        <transition target="polydraw_wait"/>
      </initial>
      <transition event="polydraw.done" target="idle"/>
      <state id="polydraw_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.D" target="idle">
          <invoke targettype="lbi" src="EndPolyDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.S" target="seek">
          <invoke targettype="lbi" src="EndPolyDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.P" target="rayprofile">
          <invoke targettype="lbi" src="EndPolyDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.C" target="datadraw">
          <invoke targettype="lbi" src="EndPolyDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="processMotion" srcexpr="UPDATE"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="polydraw_draw">
          <invoke targettype="lbi" src="processButton1"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2">
          <invoke targettype="lbi" src="processButton2"/>
        </transition>
        <transition event="lbi.polydrawend" target="polydraw_done">
          <invoke targettype="lbi" src="EndPolyDraw"/>
        </transition>
      </state>
      <state id="polydraw_draw">
        <onentry>
          <invoke targettype="sim.coin3d.coin" src="ScheduleRedraw"/>
        </onentry>
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="processMotion" srcexpr="ADD"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1">
          <invoke targettype="lbi" src="processButton1"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON2" target="polydraw_wait">
          <invoke targettype="lbi" src="processButton2"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="polydraw_wait">
          <invoke targettype="lbi" src="processButton1"/>
        </transition>
        <transition event="lbi.polydrawend" target="polydraw_done">
          <invoke targettype="lbi" src="EndPolyDraw"/>
        </transition>
      </state>
      <final id="polydraw_done"/>
    </state>
    <state id="rayprofile" task="true">
      <!-- ** RAY PROFILE MODE ************************ -->
      <initial id="rayprofile_initial">
        <transition target="rayprofile_wait"/>
      </initial>
      <transition event="rayprofile.done" target="idle"/>
      <state id="rayprofile_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.D" target="polydraw"/>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.S" target="seek"/>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.P" target="idle"/>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.C" target="datadraw"/>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="rayprofile_move">
          <invoke targettype="lbi" src="setRayProfileLocaton"/>
        </transition>
      </state>
      <state id="rayprofile_move">
        <!-- ** RAY PROFILE TRACE MODE ******************** -->
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="setRayProfileLocation"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="rayprofile_wait"/>
      </state>
      <final id="rayprofile_done"/>
    </state>
    <state id="datadraw" task="true">
      <!-- ** DATA DRAW MODE ************************ -->
      <initial id="datadraw_initial">
        <transition target="datadraw_wait">
          <invoke targettype="lbi" src="BeginDataDraw"/>
        </transition>
      </initial>
      <transition event="datadraw.done" target="idle"/>
      <state id="datadraw_wait">
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.UP_ARROW">
          <invoke targettype="lbi" src="RadiusIncrease"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.DOWN_ARROW">
          <invoke targettype="lbi" src="RadiusDecrease"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.D" target="polydraw">
          <invoke targettype="lbi" src="EndDataDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.S" target="seek">
          <invoke targettype="lbi" src="EndDataDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.P" target="rayprofile">
          <invoke targettype="lbi" src="EndDataDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.C" target="idle">
          <invoke targettype="lbi" src="EndDataDraw"/>
        </transition>
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="drawData" srcexpr="UPDATE"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.L" target="datadraw_wait">
          <invoke targettype="lbi" src="DeleteAllDrawnData"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.DELETE" target="datadraw_wait">
          <invoke targettype="lbi" src="DeleteLastDrawnData"/>
        </transition>
        <transition event="sim.coin3d.coin.SoKeyboardEvent.DOWN.BACKSPACE" target="datadraw_wait">
          <invoke targettype="lbi" src="DeleteLastStrokeData"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.DOWN.BUTTON1" target="datadraw_move">
          <invoke targettype="lbi" src="drawData" srcexpr="ADD_NEWSTROKE"/>
        </transition>
        <transition event="lbi.DatadrawEnd" target="datadraw_done">
          <invoke targettype="lbi" src="EndDataDraw"/>
        </transition>
      </state>
      <state id="datadraw_move">
        <!-- ** DATA DRAW TRACE MODE ******************** -->
        <transition event="sim.coin3d.coin.SoLocation2Event">
          <invoke targettype="lbi" src="drawData" srcexpr="ADD"/>
        </transition>
        <transition event="sim.coin3d.coin.SoMouseButtonEvent.UP.BUTTON1" target="datadraw_wait"/>
        <transition event="lbi.DatadrawEnd" target="datadraw_done">
          <invoke targettype="lbi" src="EndDataDraw"/>
        </transition>
      </state>
      <final id="datadraw_done"/>
    </state>
    <!-- hook state(s) -->
    <state id="contextmenurequest" task="true">
      <transition target="idle"/>
    </state>
  </state>
  <final id="exit"/>
  <!-- the buck can stop here -->
</scxml>
