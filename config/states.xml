<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.coin3d.org/scxml/coin/1.0" initialstate="idle">
  <state id="idle">
    <transition event="window.uiGotFocus" target="qt-ui"/>
    <transition event="KeyboardEvent.DOWN.W">
      <invoke targettype="cam" src="moveForward"/>
    </transition>
    <transition event="KeyboardEvent.DOWN.S">
      <invoke targettype="cam" src="moveBackward"/>
    </transition>
    <transition event="KeyboardEvent.DOWN.A">
      <invoke targettype="cam" src="strafeLeft"/>
    </transition>
    <transition event="KeyboardEvent.DOWN.D">
      <invoke targettype="cam" src="strafeRight"/>
    </transition>
    <transition event="KeyboardEvent.DOWN.Q">
      <invoke targettype="cam" src="azimuthLeft"/>
    </transition>
    <transition event="KeyboardEvent.DOWN.E">
      <invoke targettype="cam" src="azimuthRight"/>
    </transition>
    <transition event="KeyboardEvent.DOWN.R">
      <invoke targettype="cam" src="increaseDeclination"/>
    </transition>
    <transition event="KeyboardEvent.DOWN.F">
      <invoke targettype="cam" src="decreaseDeclination"/>
    </transition>
    <transition event="Event.Wheel">
      <invoke targettype="cameraZoom" src="wheelZoom"/>
    </transition>

    <transition event="MouseButtonEvent.DOWN.LEFT" target="rotate"/>
    <transition event="KeyboardEvent.DOWN.CTRL" target="ctrl"/>
    <transition event="KeyboardEvent.DOWN.SHIFT" target="shift"/>
    <transition event="KeyboardEvent.UP.P" target="picking"/>
    <transition event="KeyboardEvent.UP.0">
      <invoke targettype="scene" src="compositeLayers"/>
    </transition>
    <transition event="KeyboardEvent.UP.1">
      <invoke targettype="scene" src="renderFirstLayer"/>
    </transition>
    <transition event="KeyboardEvent.UP.2">
      <invoke targettype="scene" src="renderSecondLayer"/>
    </transition>
    <transition event="KeyboardEvent.UP.3">
      <invoke targettype="scene" src="renderThirdLayer"/>
    </transition>
    <transition event="KeyboardEvent.UP.4">
      <invoke targettype="scene" src="renderFourthLayer"/>
    </transition>
    <transition event="KeyboardEvent.UP.9">
      <invoke targettype="scene" src="accumulatedLayers"/>
    </transition>
    <transition event="labels.startPicking" target="picking"/>
  </state>

  <state id="qt-ui">
    <transition event="window.uiLostFocus" target="idle"/>
    <transition event="labels.startPicking" target="picking"/>
  </state>

  <state id="picking">
    <onentry>
      <invoke targettype="mouseShape" src="startPicking"/>
    </onentry>
    <transition event="Event.MouseButtonPress" target="idle">
      <invoke targettype="picking" src="pick"/>
    </transition>
    <transition event="KeyboardEvent.UP.P" target="idle"/>
    <onexit>
      <invoke targettype="mouseShape" src="reset"/>
    </onexit>
  </state>

  <state id="rotate">
    <initial id="rotate-initial">
      <transition target="rotate-move"/>
      <invoke targettype="mouseShape" src="startDragging"/>
      <invoke targettype="cameraRotation" src="startDragging"/>
    </initial>
    <state id="rotate-move">
      <transition event="window.uiGotFocus" target="qt-ui"/>
      <transition event="Event.MouseMove">
        <invoke targettype="cameraRotation" src="updateDragging"/>
      </transition>
    </state>
    <transition event="MouseButtonEvent.UP.LEFT" target="idle"/>
    <onexit>
      <invoke targettype="mouseShape" src="reset"/>
    </onexit>
  </state>
  <state id="ctrl">
    <transition event="KeyboardEvent.UP.CTRL" target="idle"/>
    <transition event="MouseButtonEvent.DOWN.LEFT" target="zoom"/>
  </state>
  <state id="shift">
    <transition event="KeyboardEvent.UP.SHIFT" target="idle"/>
    <transition event="MouseButtonEvent.DOWN.LEFT" target="move"/>
  </state>
  <state id="zoom">
    <initial id="zoom-initial">
      <transition target="zoom-move"/>
      <invoke targettype="mouseShape" src="startZoom"/>
      <invoke targettype="cameraZoom" src="startDragging"/>
    </initial>
    <state id="zoom-move">
      <transition event="Event.MouseMove">
        <invoke targettype="cameraZoom" src="updateDragging"/>
      </transition>
    </state>
    <transition event="MouseButtonEvent.UP.LEFT" target="ctrl"/>
    <transition event="KeyboardEvent.UP.CTRL" target="idle"/>
    <onexit>
      <invoke targettype="mouseShape" src="reset"/>
    </onexit>
  </state>
  <state id="move">
    <initial id="move-initial">
      <transition target="move-move"/>
      <invoke targettype="mouseShape" src="startMove"/>
      <invoke targettype="cameraMove" src="startDragging"/>
    </initial>
    <state id="move-move">
      <transition event="Event.MouseMove">
        <invoke targettype="cameraMove" src="updateDragging"/>
      </transition>
    </state>
    <transition event="MouseButtonEvent.UP.LEFT" target="shift"/>
    <onexit>
      <invoke targettype="mouseShape" src="reset"/>
    </onexit>
  </state>
</scxml>
